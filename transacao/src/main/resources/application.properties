spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:666/postgres}
spring.datasource.username=${DATASOURCE_USER:gustavo}
spring.datasource.password=${DATASOURCE_PSW:12345678}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.hibernate.ddl-auto=update

spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.data-source-properties.pool-name=postgres
spring.datasource.hikari.maximum-pool-size=10

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#kafka

spring.kafka.topic.transactions = transacoes
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}
# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \\ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

cartoes.host=${CARTOES_HOST:http://localhost:7777/api/cartoes}
